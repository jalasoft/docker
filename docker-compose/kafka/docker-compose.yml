version: "3.7"
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:6.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: "2182"
    ports:
      - "2182:2182"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2182"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: "r2"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      #KAFKA_CREATE_TOPICS: "epr.standard_feg_format.betslip-local:1:1"

  init-kafka:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
     - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "echo -e 'Creating kafka topics for kafka'
      kafka-topics --bootstrap-server kafka:9092 --list
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic epr.standard_feg_format.betslip --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics for kafka:'
      kafka-topics --bootstrap-server kafka:9092 --list"

  schema_registry:
    container_name: schemaRegistry
    image: confluentinc/cp-schema-registry:5.1.2
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2182"
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8086"
    ports:
      - "8086:8086"

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"

